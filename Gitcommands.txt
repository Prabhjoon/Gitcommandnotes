CODE WITH HARRY (GIT TUTORIAL) 19 Videos
___________________________________________________________________________________


VIDEO 02

1. git config --global user.name "Vishnu"	->   To add user name

2. git config --global user.email "Vishnu@gmail.com"   ->   To add user email and so on.

3. git config user.name  	-> To view name

4. git config user.email  	-> To view email

5. git config --list    ->   To view list (User details)


VIDEO 04

1. git status -> To view status
note- first time it shows  " fatal: not a git repository "

2.git init -> To make the selected folder a git repository

3. git add --a  -> To add all files to staging area.

4. git commit -m " write message here " -> To finally submit all staging files to git repository (Takes a screenshot ). This will clean the working tree.
note- don't use git commit without -m(message) as it will open git commit editor. 

5. git log -> shows all the changes made by the user.

6. git add filename.extention -> To add a particular file to staging.


VIDEO 05

1. rm -rf .git -> Remove folder from git repository

2. git clone (link) -> To clone a git repository.

3. pwd -> present working directory

4. ls -> list content

5. cd foldername/ -> change directory 

6. q -> Quit (back to command line )


VIDEO 07

1. touch error.log -> adds a new error.log file to the folder.

2. touch .gitignore -> adds a new .gitignore file to the folder.

3. git add .  -> same as git add --a


VIDEO 08

1. git diff -> compares staging area with working directory
2. git diff --staged   -> compares previous commit with current staging area.


VIDEO 09

1. git commit -a -m    -> stages and commits all tracked files together (Skips the staging area) .

VIDEO 10

1. git rm filename.extension  -> deletes/removes the particular file.

2. git mv oldfilename newfilename -> renames/moves oldfile to new.

3. git rm --cached filename ->  Stops tracking of the file.


VIDEO 11

1. git log -p 	-> shows addition and subtraction made in the commit.

2. git log -p -n  -> Here "n" is the number of commits we want to show.

3. git log --stat  ->  shows the number of addition and subtraction made in the commit.

4. git log --pretty=oneline   -> shows all the commits in one line

5. git log --pretty=short -> shows author and message only of all commits  

6. git log --pretty=full  -> same as short + shows commiter details.

7. git log --since=n.duration    -> Here "n" is the number and "duration" can be days/weeks/months/years. 

8. git log --pretty=format:"%h -- %an"      -> To use filters in git log
note: refer to PRETTY FORMATS section of this link - https://git-scm.com/docs/git-log   

9. git commit --amend   -> It is used to add current staging area in the previous commit.


VIDEO 12

1. git restore --staged filename -> Used to unstage a file

2. git checkout -- filename  -> to bring back last commited version of the file.

3. git checkout -f   -> brings back last commited version of all the files.



VIDEO 13

1. git remote -> To view remote link name  

2. git remote add origin https://github.com/Vishnu12111998/3rd-Practice-Repo.git -> To create a new git repo
Note: Copied this link from my github account after creating a new repository

3. git remote -v  -> Shows push and fetch links

4. git push -u (remote name) master

5. ssh-keygen -t rsa -b 4096 -C "your_email@example.com"

6. eval $(ssh-agent -s)

7. ssh-add ~/.ssh/id_rsa

8. tail ~/.ssh/id_rsa.pub

9. git push -u (remote name) master

10. ****************************INCOMPLETE****************************************



VIDEO 14 

1. git config --global alias.st status  -> This will give "status" a nickname "st".
Note : This means command git status = git st

2. git config --global alias.unstage 'restore --staged --' -> will create a nickname unstage
Note: git unstage filename -> Now this command will unstage the file.



VIDEO 15 

1. git checkout -b branchname -> creates and moves us to a new branch

2. git checkout master -> To switch from current branch to master branch.

3. git checkout branchname -> To switch to that branch

4. git branch -> To show list of all branches



VIDEO 16

1. git merge branchname -> will merge current branch with the branchname



VIDEO 17

1. git branch -v  ->  show branch and last commit message.

2. git branch --merged -> shows already merged branches.

3. git branch --no-merged -> shows not merged branches.

4. git branch -d branchname -> to delete a branch.


VIDEO 19

1. git push origin branchname:newbranchname  -> sends branch to the git repository with a new branchname.

2. git push -d origin branchname  -> To delete the branch from git repository.



 


